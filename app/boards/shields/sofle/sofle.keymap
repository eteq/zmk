/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {

    behaviors {
        vol_encoder: vol_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOL_UP>, <&kp C_VOL_DN>;
        };

        rgb_encoder: rgb_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
        };

        mouseupdown: mouseupdown {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&mmv MOVE_UP>, <&mmv MOVE_DOWN>;
        };

        mouseleftright: mouseleftright {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&mmv MOVE_LEFT>, <&mmv MOVE_RIGHT>;
        };
    };

   // Activate ADJUST layer by pressing raise and lower
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
        

        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";
// ------------------------------------------------------------------------------------------------------------
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   | DEL   |
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  | RGBPW |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               | GUI | ALT  | CTRL | LOWER|  SPACE |  | ENTER | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
&kp GRAVE &kp N1 &kp N2   &kp N3   &kp N4    &kp N5                                    &kp N6 &kp N7    &kp N8    &kp N9   &kp N0   &kp DEL
&kp ESC   &kp Q  &kp W    &kp E    &kp R     &kp T                                     &kp Y  &kp U     &kp I     &kp O    &kp P    &kp BSPC
&kp TAB   &kp A  &kp S    &kp D    &kp F     &kp G                                     &kp H  &kp J     &kp K     &kp L    &kp SEMI &kp SQT
&kp LSHFT &kp Z  &kp X    &kp C    &kp V     &kp B      &none        &none             &kp N  &kp M     &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
                 &kp LCTRL &kp LGUI &kp LALT &mo LOWER  &kp SPACE    &kp RET           &mo RAISE  &kp RALT &kp RGUI  &kp RCTRL
            >;

            sensor-bindings = <&vol_encoder &rgb_encoder>;
        };

        lower_layer {
            display-name = "lower";
// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
// |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
// |SSHIFT |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |SSHIFT |
//               |     | SALT | SCTL |      | VDOWN  |  | MUTE  |      | SCTRL |  SALT |      |
            bindings = <
&none     &kp F1    &kp F2    &kp F3    &kp F4    &kp F5                            &kp F6    &kp F7    &kp F8    &kp F9    &kp F10   &kp F11
&kp GRAVE &kp N1    &kp N2    &kp N3    &kp N4    &kp N5                            &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &kp F12
&none     &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT                         &kp CARET &kp AMPS  &kp ASTRK &kp LPAR  &kp RPAR  &kp PIPE
&sk LSHFT &kp EQUAL &kp MINUS &kp PLUS  &kp LBRC  &kp RBRC  &none        &none      &kp LBKT  &kp RBKT  &kp SEMI  &kp COLON &kp BSLH  &sk RSHFT
                    &none     &sk LALT &sk LCTRL  &trans    &kp C_VOL_DN &kp C_MUTE &trans    &sk RCTRL &sk RALT  &none 
            >;

            sensor-bindings = <&vol_encoder &rgb_encoder>;
        };

        raise_layer {
            display-name = "raise";
// ------------------------------------------------------------------------------------------------------------
// |       |      |      |       |   M^  |      |                | HOME |   NL  |   /   |   *   |   -   |       |
// |       | INS  | ^    |  M<   |   Mv  |  M>  |                | PGUP |   7   |   8   |   9   |   +   |       |
// |       | <-   | v    |  ->   |       | CAPS |                | PGDN |   4   |   5   |   6   |   +   |       |
// |       | UNDO | CUT  | COPY  | PASTE | PSCR |      |  |      | END  |   1   |   2   |   3   | ENTER |       |
//                |      |       |       |      | MUTE |  |  VUP |      |   0   |   0   |   .   |
            bindings = <
&none &none       &none       &none          &mmv MOVE_UP   &none                              &kp HOME  &kp KP_NUM &kp KP_DIVIDE &kp KP_MULTIPLY &kp KP_MINUS &none
&none &kp INS     &kp UP      &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT                    &kp PG_UP &kp KP_N7  &kp KP_N8     &kp KP_N9       &kp KP_PLUS  &none
&none &kp LEFT    &kp DOWN    &kp RIGHT      &none          &kp CLCK                           &kp PG_DN &kp KP_N4  &kp KP_N5     &kp KP_N6       &kp KP_PLUS  &none
&none &kp K_UNDO  &kp K_CUT   &kp K_COPY     &kp K_PASTE    &kp PSCRN &none       &none        &kp END   &kp KP_N1  &kp KP_N2     &kp KP_N3       &kp KP_ENTER &kp KP_ENTER
                  &none       &none          &none          &trans    &kp C_MUTE  &kp C_VOL_UP &trans    &kp KP_N0  
            >;

            sensor-bindings = <&vol_encoder &rgb_encoder>;
        };

        adjust_layer {
// ----------------------------------------------------------------------------------------------------------------------------
// | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                | BTD1 | BTD2 | BTD3 | BTD4 | BTD5 | SOFF  |
// | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                |      |      |      |      |      | SOFF  |
// | RGB_TOG| RGB_BRD | RGB_BRI |  GB_SPI | RGB_SPD | RGB_EFR |                |      |      |      |      |      | SOFF  |
// |        |         |         |         |         |         |      |  |      |      |      |      |      |      | SOFF  |
//                    |         |         |         |         | OUTU |  | OUTB |      |      |      |      |
            display-name = "adjust";
            bindings = <
&bt BT_CLR        &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4     &bt BT_DISC 0 &bt BT_DISC 1 &bt BT_DISC 2 &bt BT_DISC 3 &bt BT_DISC 4 &soft_off
&ext_power EP_TOG &rgb_ug RGB_HUD &rgb_ug RGB_HUI &rgb_ug RGB_SAD &rgb_ug RGB_SAI &rgb_ug RGB_EFF  &none &none &none &none &none &soft_off
&rgb_ug RGB_TOG   &rgb_ug RGB_BRD &rgb_ug RGB_BRI &rgb_ug RGB_SPI &rgb_ug RGB_SPD &rgb_ug RGB_EFR  &none &none &none &none &none &soft_off
&none             &none           &none           &none           &none           &none            &none &none &none &none &none &soft_off
                                  &none           &none           &out OUT_USB    &out OUT_BLE     &none &none &none &none &none
            >;
        };

    };
};

